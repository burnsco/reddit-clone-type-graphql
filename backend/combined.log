{"level":"info","message":"DB Initialized","service":"user-service"}
{"level":"info","message":"\u001b[90m[discovery] \u001b[39mORM entity discovery started, using \u001b[36mReflectMetadataProvider\u001b[39m","service":"user-service"}
{"level":"info","message":"\u001b[90m[discovery] \u001b[39m- processing \u001b[36m9\u001b[39m files","service":"user-service"}
{"level":"info","message":"\u001b[90m[discovery] \u001b[39m- ignoring file index.js","service":"user-service"}
{"level":"info","message":"\u001b[90m[discovery] \u001b[39m- processing entity \u001b[36mBase\u001b[39m\u001b[90m (/home/cburns/dev/proj/reddit-clone-type-graphql/backend/dist/entities/Base.js)\u001b[39m","service":"user-service"}
{"level":"info","message":"\u001b[90m[discovery] \u001b[39m- processing entity \u001b[36mCategory\u001b[39m\u001b[90m (/home/cburns/dev/proj/reddit-clone-type-graphql/backend/dist/entities/Category.js)\u001b[39m","service":"user-service"}
{"level":"info","message":"\u001b[90m[discovery] \u001b[39m- processing entity \u001b[36mComment\u001b[39m\u001b[90m (/home/cburns/dev/proj/reddit-clone-type-graphql/backend/dist/entities/Comment.js)\u001b[39m","service":"user-service"}
{"level":"info","message":"\u001b[90m[discovery] \u001b[39m- processing entity \u001b[36mImage\u001b[39m\u001b[90m (/home/cburns/dev/proj/reddit-clone-type-graphql/backend/dist/entities/Image.js)\u001b[39m","service":"user-service"}
{"level":"info","message":"\u001b[90m[discovery] \u001b[39m- processing entity \u001b[36mMessage\u001b[39m\u001b[90m (/home/cburns/dev/proj/reddit-clone-type-graphql/backend/dist/entities/Message.js)\u001b[39m","service":"user-service"}
{"level":"info","message":"\u001b[90m[discovery] \u001b[39m- processing entity \u001b[36mPost\u001b[39m\u001b[90m (/home/cburns/dev/proj/reddit-clone-type-graphql/backend/dist/entities/Post.js)\u001b[39m","service":"user-service"}
{"level":"info","message":"\u001b[90m[discovery] \u001b[39m- processing entity \u001b[36mUser\u001b[39m\u001b[90m (/home/cburns/dev/proj/reddit-clone-type-graphql/backend/dist/entities/User.js)\u001b[39m","service":"user-service"}
{"level":"info","message":"\u001b[90m[discovery] \u001b[39m- processing entity \u001b[36mVote\u001b[39m\u001b[90m (/home/cburns/dev/proj/reddit-clone-type-graphql/backend/dist/entities/Vote.js)\u001b[39m","service":"user-service"}
{"level":"info","message":"\u001b[90m[discovery] \u001b[39m- processing entity \u001b[36mBaseEntity\u001b[39m","service":"user-service"}
{"level":"info","message":"\u001b[90m[discovery] \u001b[39m- entity discovery finished, found \u001b[32m10\u001b[39m entities, took \u001b[32m51 ms\u001b[39m","service":"user-service"}
{"level":"info","message":"\u001b[90m[info] \u001b[39mMikroORM successfully connected to database \u001b[32mreddit-clone-db on postgres://postgres:*****@172.22.0.3:5432\u001b[39m","service":"user-service"}
{"level":"info","message":"\u001b[90m[query] \u001b[39mselect table_name, nullif(table_schema, 'public') as schema_name from information_schema.tables where table_schema not like 'pg_%' and table_schema != 'information_schema' and table_name != 'geometry_columns' and table_name != 'spatial_ref_sys' and table_type != 'VIEW' order by table_name\u001b[90m [took 4 ms]\u001b[39m","service":"user-service"}
{"level":"info","message":"\u001b[90m[query] \u001b[39mselect * from \"mikro_orm_migrations\" order by \"id\" asc\u001b[90m [took 1 ms]\u001b[39m","service":"user-service"}
{"level":"info","message":"\u001b[90m[discovery] \u001b[39mORM entity discovery started, using \u001b[36mReflectMetadataProvider\u001b[39m","service":"user-service"}
{"level":"info","message":"\u001b[90m[discovery] \u001b[39m- processing \u001b[36m9\u001b[39m files","service":"user-service"}
{"level":"info","message":"\u001b[90m[discovery] \u001b[39m- ignoring file index.js","service":"user-service"}
{"level":"info","message":"\u001b[90m[discovery] \u001b[39m- processing entity \u001b[36mBase\u001b[39m\u001b[90m (/home/cburns/dev/proj/reddit-clone-type-graphql/backend/dist/entities/Base.js)\u001b[39m","service":"user-service"}
{"level":"info","message":"\u001b[90m[discovery] \u001b[39m- processing entity \u001b[36mCategory\u001b[39m\u001b[90m (/home/cburns/dev/proj/reddit-clone-type-graphql/backend/dist/entities/Category.js)\u001b[39m","service":"user-service"}
{"level":"info","message":"\u001b[90m[discovery] \u001b[39m- processing entity \u001b[36mComment\u001b[39m\u001b[90m (/home/cburns/dev/proj/reddit-clone-type-graphql/backend/dist/entities/Comment.js)\u001b[39m","service":"user-service"}
{"level":"info","message":"\u001b[90m[discovery] \u001b[39m- processing entity \u001b[36mImage\u001b[39m\u001b[90m (/home/cburns/dev/proj/reddit-clone-type-graphql/backend/dist/entities/Image.js)\u001b[39m","service":"user-service"}
{"level":"info","message":"\u001b[90m[discovery] \u001b[39m- processing entity \u001b[36mMessage\u001b[39m\u001b[90m (/home/cburns/dev/proj/reddit-clone-type-graphql/backend/dist/entities/Message.js)\u001b[39m","service":"user-service"}
{"level":"info","message":"\u001b[90m[discovery] \u001b[39m- processing entity \u001b[36mPost\u001b[39m\u001b[90m (/home/cburns/dev/proj/reddit-clone-type-graphql/backend/dist/entities/Post.js)\u001b[39m","service":"user-service"}
{"level":"info","message":"\u001b[90m[discovery] \u001b[39m- processing entity \u001b[36mUser\u001b[39m\u001b[90m (/home/cburns/dev/proj/reddit-clone-type-graphql/backend/dist/entities/User.js)\u001b[39m","service":"user-service"}
{"level":"info","message":"\u001b[90m[discovery] \u001b[39m- processing entity \u001b[36mVote\u001b[39m\u001b[90m (/home/cburns/dev/proj/reddit-clone-type-graphql/backend/dist/entities/Vote.js)\u001b[39m","service":"user-service"}
{"level":"info","message":"\u001b[90m[discovery] \u001b[39m- processing entity \u001b[36mBaseEntity\u001b[39m","service":"user-service"}
{"level":"info","message":"\u001b[90m[discovery] \u001b[39m- entity discovery finished, found \u001b[32m10\u001b[39m entities, took \u001b[32m48 ms\u001b[39m","service":"user-service"}
{"level":"info","message":"\u001b[90m[info] \u001b[39mMikroORM successfully connected to database \u001b[32mreddit-clone-db on postgres://postgres:*****@172.22.0.3:5432\u001b[39m","service":"user-service"}
{"level":"info","message":"\u001b[90m[query] \u001b[39mselect table_name, nullif(table_schema, 'public') as schema_name from information_schema.tables where table_schema not like 'pg_%' and table_schema != 'information_schema' and table_name != 'geometry_columns' and table_name != 'spatial_ref_sys' and table_type != 'VIEW' order by table_name\u001b[90m [took 3 ms]\u001b[39m","service":"user-service"}
{"level":"info","message":"\u001b[90m[query] \u001b[39mselect * from \"mikro_orm_migrations\" order by \"id\" asc\u001b[90m [took 2 ms]\u001b[39m","service":"user-service"}
